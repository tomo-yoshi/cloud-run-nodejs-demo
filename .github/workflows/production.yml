name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Check and Create Docker Repository
        run: |
          REPO_PATH="${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-repo"
          if ! gcloud artifacts repositories list --location=${{ secrets.GCP_REGION }} | grep -q "docker-repo"; then
            echo "Creating Docker repository..."
            gcloud artifacts repositories create docker-repo \
              --repository-format=docker \
              --location=${{ secrets.GCP_REGION }} \
              --description="Docker repository for production deployment"
          else
            echo "Docker repository already exists, skipping creation"
          fi

      - name: Build and Push Image
        run: |
          docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-repo/production-app:${{ github.sha }} .
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-repo/production-app:${{ github.sha }}

      - name: Check if Cloud Run service exists
        id: check-service
        run: |
          if gcloud run services describe ${{ secrets.GCP_CLOUD_RUN_PRODUCTION_INSTANCE_NAME }} --region=${{ secrets.GCP_REGION }} --project=${{ secrets.GCP_PROJECT_ID }} > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create and Deploy New Service
        if: steps.check-service.outputs.exists == 'false'
        run: |
          gcloud run deploy ${{ secrets.GCP_CLOUD_RUN_PRODUCTION_INSTANCE_NAME }} \
            --image ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-repo/production-app:${{ github.sha }} \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated

      - name: Update Existing Service
        if: steps.check-service.outputs.exists == 'true'
        run: |
          gcloud run deploy ${{ secrets.GCP_CLOUD_RUN_PRODUCTION_INSTANCE_NAME }} \
            --image ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-repo/production-app:${{ github.sha }} \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed
