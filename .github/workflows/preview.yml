name: Preview Deployment

on:
  pull_request:
    branches:
      - develop
    types: [opened, synchronize, reopened, closed]

env:
  PROJECT_ID: ftc-performance-optimization
  REGION: us-west1

jobs:
  deploy:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Google Cloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Build and Push Docker image
        run: |
          docker build -t gcr.io/${{ env.PROJECT_ID }}/nodejs-server:pr-${{ github.event.number }} .
          docker push gcr.io/${{ env.PROJECT_ID }}/nodejs-server:pr-${{ github.event.number }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        working-directory: terraform/environments/preview
        run: |
          terraform init \
            -backend-config="project=${{ env.PROJECT_ID }}" \
            -backend-config="bucket=${{ env.PROJECT_ID }}-terraform-state"

      - name: Terraform Apply
        working-directory: terraform/environments/preview
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
        id: terraform-apply
        run: |
          terraform apply -auto-approve \
            -var="project_id=${{ env.PROJECT_ID }}" \
            -var="region=${{ env.REGION }}" \
            -var="image_url=gcr.io/${{ env.PROJECT_ID }}/nodejs-server:pr-${{ github.event.number }}" \
            -var="pr_number=${{ github.event.number }}"
          
          # Extract and save the URL
          echo "preview_url=$(terraform output -raw service_url)" >> $GITHUB_OUTPUT

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          script: |
            const previewUrl = '${{ steps.terraform-apply.outputs.preview_url }}';
            const message = `ðŸš€ Preview environment is ready!\n\nPreview URL: ${previewUrl}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: message
            });

  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Google Cloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        working-directory: terraform/environments/preview
        run: |
          terraform init \
            -backend-config="project=${{ env.PROJECT_ID }}" \
            -backend-config="bucket=${{ env.PROJECT_ID }}-terraform-state"

      - name: Terraform Destroy
        working-directory: terraform/environments/preview
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
        run: |
          terraform destroy -auto-approve \
            -var="project_id=${{ env.PROJECT_ID }}" \
            -var="region=${{ env.REGION }}" \
            -var="image_url=gcr.io/${{ env.PROJECT_ID }}/nodejs-server:pr-${{ github.event.number }}" \
            -var="pr_number=${{ github.event.number }}" 

permissions:
  pull-requests: write
  contents: read 